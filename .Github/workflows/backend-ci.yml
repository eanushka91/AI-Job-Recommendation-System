# .GitHub/workflows/backend-ci.yml

name: Backend CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"] # Use your project's Python version

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # --- DEBUG STEP: Check the file structure after checkout ---
      - name: List files in workspace
        run: |
          echo "Current directory: $(pwd)"
          echo "Workspace content:"
          ls -la # Use 'ls -la' for more details including hidden files
          echo "--- Recursive listing: ---"
          ls -R
          echo "--- End file listing ---"
      # --- END DEBUG STEP ---

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python # Add an id for potential future use
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # Cache pip dependencies based on requirements.txt hash
          # This step fails if requirements.txt is not found at the expected path
          cache: 'pip'
          # If requirements.txt is NOT at the root, uncomment and set the path:
          # cache-dependency-path: 'path/to/your/requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # This assumes requirements.txt is in the current working directory (repository root)
          if [ -f requirements.txt ]; then
             pip install -r requirements.txt
          else
             echo "requirements.txt not found in $(pwd)!"
             exit 1 # Fail the job if requirements.txt is missing
          fi
          # Install tools needed for subsequent steps if not in requirements.txt
          pip install pytest pytest-cov ruff

      - name: Lint and Format Check with Ruff
        run: |
          ruff check . --output-format=github
          ruff format . --check

      - name: Run tests with Pytest
        run: |
          pytest --cov=app --cov-report=term-missing --cov-fail-under=80
        # env: ... (secrets if needed for integration tests)